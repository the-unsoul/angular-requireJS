.tst(@props: 'properties_string') {
  -o-transition: ~'@{props}';
  -ms-transition: ~'@{props}';
  -moz-transition: ~'@{props}';
  -webkit-transition: ~'@{props}';
  transition: ~'@{props}';
}
.translate (@x, @y) {
  -o-transform: translate(@x, @y);
  -ms-transform: translate(@x, @y);
  -moz-transform: translate(@x, @y);
  -webkit-transform: translate(@x, @y);
  transform: translate(@x, @y);
}
.scale(@x, @y){
  -moz-transform:    scale(@x, @y);
  -o-transform:      scale(@x, @y);
  -ms-transform:      scale(@x, @y);
  -webkit-transform: scale(@x, @y);
  transform:         scale(@x, @y);
}

.background-gradient(@startColor: #3C3C3C, @endColor: #999999) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(top, @startColor, @endColor);
    background-image:    -moz-linear-gradient(top, @startColor, @endColor);
    background-image:     -ms-linear-gradient(top, @startColor, @endColor);
    background-image:      -o-linear-gradient(top, @startColor, @endColor);
    background-image:         linear-gradient(top, @startColor, @endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='@{startColor}', endColorStr='@{endColor}');
}

.background-radial(@startColor: #FFFFFF, @startPos: 0%, @endColor: #000000, @endPos:100%) {
    background: -moz-radial-gradient(center, ellipse cover, @startColor @startPos, @endColor @endPos);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(@startPos,@startColor), color-stop(@endPos,@endColor));
    background: -webkit-radial-gradient(center, ellipse cover, @startColor @startPos,@endColor @endPos);
    background: -o-radial-gradient(center, ellipse cover, @startColor @startPos,@endColor @endPos);
    background: -ms-radial-gradient(center, ellipse cover, @startColor @startPos,@endColor @endPos);
    background: radial-gradient(ellipse at center, @startColor @startPos,@endColor @endPos);
    filter:     progid:DXImageTransform.Microsoft.gradient( startColorstr='#{@startColor}', endColorstr='#{@endColor}',GradientType=1 );
}

.background-size(@width: 100%, @height: 100%) {
     -moz-background-size: @width @height;
  -webkit-background-size: @width @height;
          background-size: @width @height;
}
.bg-size(@props) {
  -moz-background-size: ~'@{props}';
  -webkit-background-size: ~'@{props}';
  background-size: ~'@{props}';
}

.background-opacity(@color, @opacity: 0.85) {
  background: @color;
  background: rgba(@color, @opacity);
}

.border-radius(@radius: 5px) {
    -moz-border-radius:    @radius;
    -webkit-border-radius: @radius;
    border-radius:         @radius;
}

.border-radius-separate(@topLeftRadius: 5px, @topRightRadius: 5px, @bottomLeftRadius: 5px, @bottomRightRadius: 5px) {
    -webkit-border-top-left-radius:     @topLeftRadius;
    -webkit-border-top-right-radius:    @topRightRadius;
    -webkit-border-bottom-right-radius: @bottomRightRadius;
    -webkit-border-bottom-left-radius:  @bottomLeftRadius;

    -moz-border-radius-topleft:     @topLeftRadius;
    -moz-border-radius-topright:    @topRightRadius;
    -moz-border-radius-bottomright: @bottomRightRadius;
    -moz-border-radius-bottomleft:  @bottomLeftRadius;

    border-top-left-radius:     @topLeftRadius;
    border-top-right-radius:    @topRightRadius;
    border-bottom-right-radius: @bottomRightRadius;
    border-bottom-left-radius:  @bottomLeftRadius;
}

.box(@orient: horizontal, @pack: center, @align: center) {
    display: -webkit-box;
    display: -moz-box;
    display: box;

    -webkit-box-orient: @orient;
    -moz-box-orient:    @orient;
    box-orient:         @orient;

    -webkit-box-pack: @pack;
    -moz-box-pack:    @pack;
    box-pack:         @pack;

    -webkit-box-align: @align;
    -moz-box-align:    @align;
    box-align:         @align;
}

.box-rgba(@r: 60, @g: 3, @b: 12, @opacity: 0.23, @color: #3C3C3C) {
  background-color: transparent;
  background-color: rgba(@r, @g, @b, @opacity);
            filter: ~'progid:DXImageTransform.Microsoft.gradient(startColorstr=@{color},endColorstr=@{color})';
            zoom:   1;
}


.box-shadow(@x: 2px, @y: 2px, @blur: 5px, @color: rgba(0,0,0,.4)){
    -webkit-box-shadow: @inset @x @y @blur @color;
    -moz-box-shadow:    @inset @x @y @blur @color;
    box-shadow:         @inset @x @y @blur @color;
} 

.box-sizing(@type: border-box) {
    -webkit-box-sizing:   @type;
    -moz-box-sizing:      @type;
    box-sizing:           @type;
}

.columns(@count: 3, @gap: 10) {
    -webkit-column-count: @count;
    -moz-column-count:    @count;
    column-count:         @count;

    -webkit-column-gap:   @gap;
    -moz-column-gap:      @gap;
    column-gap:           @gap;
}


.flex(@value: 1) {
    -webkit-box-flex: @value;
    -moz-box-flex:    @value;
    box-flex:         @value;
}

.flip(@scaleX: -1) {
  -moz-transform:    scaleX(@scaleX);
  -o-transform:      scaleX(@scaleX);
  -webkit-transform: scaleX(@scaleX);
  transform:         scaleX(@scaleX);
  filter:            FlipH;
  -ms-filter:        "FlipH";
}

.font-face(@fontFamily: myFont, @eotFileSrc: 'myFont.eot', @woffFileSrc: 'myFont.woff', @ttfFileSrc: 'myFont.ttf') {
  font-family: @fontFamily;
  src: url(@eotFileSrc)  format('eot'),
       url(@woffFileSrc) format('woff'),
       url(@ttfFileSrc)  format('truetype');
}

.opacity(@opacity: 0.5) {
    filter:         ~'alpha(opacity=('@opacity * 100~'))';
    -ms-filter:     ~'progid:DXImageTransform.Microsoft.Alpha(Opacity=('@opacity * 100~'))';
    -moz-opacity:   @opacity;
    -khtml-opacity: @opacity;
    opacity:        @opacity;
}


.outline-radius(@radius: 5px) {
    -webkit-outline-radius: @radius;
    -moz-outline-radius:    @radius;
    outline-radius:         @radius;
}

.rotate(@deg: 0, @m11: 0, @m12: 0, @m21: 0, @m22: 0) {
     -moz-transform: rotate(@deg + deg);
       -o-transform: rotate(@deg + deg);
  -webkit-transform: rotate(@deg + deg);
      -ms-transform: rotate(@deg + deg);
          transform: rotate(@deg + deg);
             filter: ~"progid:DXImageTransform.Microsoft.Matrix(M11=@{m11}, M12=@{m12}, M21=@{m21}, M22=@{m22}, sizingMethod='auto expand')";
               zoom: 1;
}

.text-shadow(@x: 2px, @y: 2px, @blur: 5px, @color: rgba(0,0,0,.4)) {
    text-shadow: @x @y @blur @color;
}
.tshadow(@props) {
    text-shadow: ~'@props';
}
.transform(@params) {
    -webkit-transform: @params;
    -moz-transform:    @params;
    transform:         @params;
}


// .keyframes(@animation-name) {
//   @-webkit-keyframes @animation-name {
//     @content;
//   }
//   @-moz-keyframes @animation-name {
//     @content;
//   }  
//   @-ms-keyframes @animation-name {
//     @content;
//   }
//   @-o-keyframes @animation-name {
//     @content;
//   }  
//   @keyframes @animation-name {
//     @content;
//   }
// }

.animation(@str, @dur) {
  -webkit-animation: @str;
  -moz-animation: @str;
  -ms-animation: @str;
  -o-animation: @str;
  animation: @str;    
  -o-animation-duration: @dur;  
  -ms-animation-duration: @dur;
  -moz-animation-duration: @dur;  
  -webkit-animation-duration: @dur;
  animation-duration: @dur;  
}
